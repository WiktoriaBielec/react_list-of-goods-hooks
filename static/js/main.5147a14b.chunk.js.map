{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EAjDD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAERM,EAAY,YAAOD,GAqBvB,OAnBIF,IAAaP,EAASW,WACxBD,EAAeA,EAAaE,MAAK,SAACC,EAAGC,GACnC,OAAOD,EAAEE,cAAcD,OAIvBP,IAAaP,EAASgB,SACxBN,EAAeA,EAAaE,MAAK,SAACC,EAAGC,GACnC,OAAOD,EAAEI,OAASH,EAAEG,WAIpBb,IACFM,EAAeA,EAAaQ,WAI9BC,QAAQC,IAAIb,EAAUH,GAEfM,EAwBOW,CAAkBpB,EAAiB,CAAEM,WAAUH,eAE7D,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWf,IAAaP,EAASW,SAC7B,iBACA,0BACJa,QA3ByB,WAC/BhB,EAAYR,EAASW,WAqBjB,iCAUA,wBACEY,KAAK,SACLD,UAAWf,IAAaP,EAASgB,OAC7B,oBACA,6BACJQ,QAjCmB,WACzBhB,EAAYR,EAASgB,SA2BjB,4BAUA,wBACEO,KAAK,SACLD,WAA0B,IAAflB,EACP,oBACA,6BACJoB,QAvCc,WACpBnB,GAAeD,IAiCX,sBAUEG,IAAaP,EAASM,OACJ,IAAfF,IAEH,wBACEmB,KAAK,SACLD,UAAU,4BACVE,QA9CU,WAClBhB,EAAYR,EAASM,MACrBD,GAAc,IAyCR,sBAUJ,6BACGI,EAAMgB,KAAI,SAAAC,GACT,OACE,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC7HrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5147a14b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods = visibleGoods.sort((a, b) => {\n      return a.localeCompare(b);\n    });\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods = visibleGoods.sort((a, b) => {\n      return a.length - b.length;\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods = visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleSortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleSortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={sortType === SortType.ALPHABET\n            ? 'button is-info'\n            : 'button is-info is-light'}\n          onClick={handleSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortType === SortType.LENGTH\n            ? 'button is-success'\n            : 'button is-success is-light'}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed === true\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE\n          || isReversed === true)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => {\n          return (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}